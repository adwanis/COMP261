#BlueJ class context
comment0.target=GisPoint
comment0.text=\ Simple\ data\ structure\ to\ represent\ a\ Geographical\ Information\ System\ (GIS)\ point.\ \r\nThis\ way\ the\ screen\ Point2D\ is\ kept\ separate\ from\ the\ point\ in\ the\ model\ \r\n
comment1.params=lat1\ lat2\ lon1\ lon2\ el1\ el2
comment1.target=double\ distance(double,\ double,\ double,\ double,\ double,\ double)
comment1.text=\r\n\ Calculate\ distance\ between\ two\ points\ in\ latitude\ and\ longitude\ taking\r\n\ into\ account\ height\ difference.\ If\ you\ are\ not\ interested\ in\ height\r\n\ difference\ pass\ 0.0.\ Uses\ Haversine\ method\ as\ its\ base.\r\n\ From\ google\ search\ and\ answer\:\r\n\ https\://stackoverflow.com/questions/3694380/calculating-distance-between-two-points-using-latitude-longitude\r\n\ lat1,\ lon1\ Start\ point\ lat2,\ lon2\ End\ point\ el1\ Start\ altitude\ in\ meters\r\n\ el2\ End\ altitude\ in\ meters\r\n\ \r\n\ @returns\ Distance\ in\ meters\ between\ two\ GPS\ points\ with\ elevation\r\n\ \r\n
comment10.params=lon2\ lat2
comment10.target=double\ distance(double,\ double)
comment10.text=\r\n\ \r\n\ @returns\ Distance\ in\ Meters\r\n
comment11.params=loc
comment11.target=double\ distance(GisPoint)
comment11.text=\r\n\ .\r\n\ \r\n\ @returns\ Distance\ in\ Meters\r\n
comment12.params=
comment12.target=double\ getLat()
comment13.params=
comment13.target=double\ getLon()
comment2.params=lon\ lat
comment2.target=GisPoint(double,\ double)
comment3.params=point
comment3.target=GisPoint\ add(GisPoint)
comment4.params=lon\ lat
comment4.target=GisPoint\ add(double,\ double)
comment5.params=point
comment5.target=void\ move(GisPoint)
comment6.params=lon\ lat
comment6.target=void\ move(double,\ double)
comment7.params=point
comment7.target=GisPoint\ subtract(GisPoint)
comment8.params=lon\ lat
comment8.target=GisPoint\ subtract(double,\ double)
comment9.params=
comment9.target=java.lang.String\ toString()
numComments=14
